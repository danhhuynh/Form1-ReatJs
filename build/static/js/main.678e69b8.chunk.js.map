{"version":3,"sources":["databaseTest/FakeFormData.js","components/Form/ViewForm.js","components/Form/Elements/Input.js","components/Form/Elements/SaveButton.js","components/Form/Elements/OptionTickBox.js","components/Form/Elements/ComboBox.js","components/Form/CreateForm.js","App.js","index.js"],"names":["elementsOfFormType","sampleSourceForElement","gender","fav","role","elementsInForm","form_id","view_type","edit_type","name","title","pos","sampleSource","customer","ViewForm","dataInput","this","props","map","ele","index","Form","Group","className","controlId","InputGroup","Text","Control","type","value","inline","renderElement","React","Component","Input","onChange","handleInputChange","SaveButton","Button","variant","onClick","handleButtonClicked","OptionTickBox","ckRows","item","checked","undefined","includes","Check","label","multi","id","ComboBox","comboxRows","selected","class","Select","CreateForm","App","state","FakeData","customerView","showView","bind","event","target","setState","prevState","Object","assign","replace","Container","Navbar","bg","style","marginBottom","Brand","href","Row","Col","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.678e69b8.chunk.js","sourcesContent":["export const elementsOfFormType = {\n  Input: \"text\",\n  CheckBox: \"checkbox\",\n  RadioBox: \"radio\",\n  ComboBox: \"select-one\",\n  Button: \"button\",\n};\n\nexport const sampleSourceForElement = {\n  gender: [\"Male\", \"Female\"],\n  fav: [\n    \"Football\",\n    \"Swimming\",\n    \"Volleyball\",\n    \"Badminton\",\n    \"Baseball\",\n    \"Chess\",\n    \"Cycling\",\n    \"Golf\",\n  ],\n  role: [\"User\", \"Admin\", \"Mode\"],\n};\n\nexport const sampleForm = {\n  id: 1,\n  name: \"Form Khách Hàng\",\n};\n\nexport const elementsInForm = [\n  {\n    form_id: 1,\n    view_type: elementsOfFormType.Input,\n    edit_type: elementsOfFormType.Input,\n    name: \"first_name\",\n    title: \"Firstname\",\n    pos: 1,\n  },\n  {\n    form_id: 1,\n    view_type: elementsOfFormType.Input,\n    edit_type: elementsOfFormType.Input,\n    name: \"last_name\",\n    title: \"Lastname\",\n    pos: 2,\n  },\n  {\n    form_id: 1,\n    view_type: elementsOfFormType.Input,\n    edit_type: elementsOfFormType.RadioBox,\n    name: \"gender\",\n    title: \"Gender\",\n    sampleSource: sampleSourceForElement.gender,\n    pos: 3,\n  },\n  {\n    form_id: 1,\n    view_type: elementsOfFormType.Input,\n    edit_type: elementsOfFormType.CheckBox,\n    name: \"fav\",\n    title: \"Fav\",\n    sampleSource: sampleSourceForElement.fav,\n    pos: 4,\n  },\n  {\n    form_id: 1,\n    view_type: elementsOfFormType.Input,\n    edit_type: elementsOfFormType.ComboBox,\n    name: \"role\",\n    title: \"Role\",\n    sampleSource: sampleSourceForElement.role,\n    pos: 5,\n  },\n  {\n    form_id: 1,\n    edit_type: elementsOfFormType.Button,\n    name: \"save_btn\",\n    title: \"Save\",\n    pos: 6,\n  },\n];\n\n// export const customer = {\n//   first_name: \"danh\",\n//   last_name: \"huynh\",\n//   gender: \"Male\",\n//   fav: \"Swimming\",\n//   role: \"User\",\n// };\n\nexport const customer = {};\n","import React from \"react\";\r\nimport { elementsOfFormType } from \"../../databaseTest/FakeFormData\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\n\r\nclass ViewForm extends React.Component {\r\n  renderElement() {\r\n    const dataInput = this.props.dataInput;\r\n    const elementsInForm = this.props.elementsInForm;\r\n    return elementsInForm.map((ele, index) => {\r\n      switch (ele.view_type) {\r\n        case elementsOfFormType.Input:\r\n          return (\r\n            <Form.Group className=\"mb-3\" controlId={ele.name}>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>{ele.title}</InputGroup.Text>\r\n                <Form.Control type=\"text\" value={dataInput[ele.name]} />\r\n              </InputGroup>\r\n            </Form.Group>\r\n          );\r\n\r\n        default:\r\n          break;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Form inline>{this.renderElement()}</Form>;\r\n  }\r\n}\r\n\r\nexport default ViewForm;\r\n","import { Form, InputGroup } from \"react-bootstrap\";\r\n\r\nfunction Input(props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId={props.ele.name}>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>{props.ele.title}</InputGroup.Text>\r\n        <Form.Control\r\n          type={props.ele.edit_type}\r\n          name={props.ele.name}\r\n          value={props.dataInput[props.ele.name]}\r\n          onChange={props.handleInputChange}\r\n        />\r\n      </InputGroup>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nfunction SaveButton(props) {\r\n  return (\r\n    <Button variant=\"primary\" onClick={props.handleButtonClicked}>\r\n      {props.ele.title}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default SaveButton;\r\n","import { Form } from \"react-bootstrap\";\r\nimport { elementsOfFormType } from \"../../../databaseTest/FakeFormData\";\r\n\r\nfunction OptionTickBox(props) {\r\n  let ckRows = props.ele.sampleSource.map((item, index) => {\r\n    let checked = false;\r\n    if (props.dataInput[props.ele.name] !== undefined) {\r\n      checked = props.dataInput[props.ele.name].includes(item) ? true : false;\r\n    }\r\n\r\n    return (\r\n      <Form.Check\r\n        inline\r\n        label={item}\r\n        name={props.ele.name}\r\n        value={item}\r\n        multi={props.ele.edit_type === elementsOfFormType.CheckBox}\r\n        type={props.ele.edit_type}\r\n        checked={checked}\r\n        id={`inline-${props.ele.edit_type}-${index}`}\r\n        onChange={props.handleInputChange}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div key={`inline-${props.ele.edit_type}`} className=\"mb-3\">\r\n      {ckRows}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionTickBox;\r\n","import { Form } from \"react-bootstrap\";\r\n\r\nfunction ComboBox(props) {\r\n  let comboxRows = props.ele.sampleSource.map((item, index) => {\r\n    return (\r\n      <option\r\n        selected={item === props.dataInput[props.ele.name] ? \"selected\" : \"\"}\r\n        value={item}\r\n      >\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n  return (\r\n    <div class=\"mb-3\">\r\n      <Form.Select name={props.ele.name} onChange={props.handleInputChange}>\r\n        <option>Open this select menu</option>\r\n        {comboxRows}\r\n      </Form.Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComboBox;\r\n","import React from \"react\";\r\nimport { elementsOfFormType } from \"../../databaseTest/FakeFormData\";\r\nimport Input from \"./Elements/Input\";\r\nimport SaveButton from \"./Elements/SaveButton\";\r\nimport OptionTickBox from \"./Elements/OptionTickBox\";\r\nimport ComboBox from \"./Elements/ComboBox\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nclass CreateForm extends React.Component {\r\n  renderElement() {\r\n    const dataInput = this.props.dataInput;\r\n    const elementsInForm = this.props.elementsInForm;\r\n\r\n    return elementsInForm.map((ele, index) => {\r\n      switch (ele.edit_type) {\r\n        case elementsOfFormType.Input:\r\n          return (\r\n            <Input\r\n              ele={ele}\r\n              dataInput={dataInput}\r\n              handleInputChange={this.props.handleInputChange}\r\n            />\r\n          );\r\n        case elementsOfFormType.Button:\r\n          return (\r\n            <SaveButton\r\n              ele={ele}\r\n              handleButtonClicked={this.props.handleButtonClicked}\r\n            />\r\n          );\r\n        case elementsOfFormType.RadioBox:\r\n        case elementsOfFormType.CheckBox:\r\n          return (\r\n            <OptionTickBox\r\n              ele={ele}\r\n              dataInput={dataInput}\r\n              handleInputChange={this.props.handleInputChange}\r\n            />\r\n          );\r\n        case elementsOfFormType.ComboBox:\r\n          return (\r\n            <ComboBox\r\n              ele={ele}\r\n              dataInput={dataInput}\r\n              handleInputChange={this.props.handleInputChange}\r\n            />\r\n          );\r\n\r\n        default:\r\n          break;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Form inline>{this.renderElement()}</Form>;\r\n  }\r\n}\r\n\r\nexport default CreateForm;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport ViewForm from \"./components/Form/ViewForm\";\r\nimport CreateForm from \"./components/Form/CreateForm\";\r\nimport * as FakeData from \"./databaseTest/FakeFormData\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Container, Row, Col, Navbar } from \"react-bootstrap\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer: FakeData.customer,\r\n      customerView: {},\r\n      showView: false,\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleButtonClicked = this.handleButtonClicked.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n\r\n    switch (target.type) {\r\n      case FakeData.elementsOfFormType.RadioBox:\r\n      case FakeData.elementsOfFormType.ComboBox:\r\n      case FakeData.elementsOfFormType.Input:\r\n        this.setState((prevState) => {\r\n          let customer = Object.assign({}, prevState.customer);\r\n          customer[target.name] = target.value;\r\n          return { customer };\r\n        });\r\n\r\n        break;\r\n      case FakeData.elementsOfFormType.CheckBox:\r\n        this.setState((prevState) => {\r\n          let customer = Object.assign({}, prevState.customer);\r\n          if (target.checked) {\r\n            customer[target.name] = customer[target.name]\r\n              ? customer[target.name] + \",\" + target.value\r\n              : target.value;\r\n          } else {\r\n            customer[target.name] = customer[target.name].replace(\r\n              target.value,\r\n              \"\"\r\n            );\r\n          }\r\n          customer[target.name] = customer[target.name]\r\n            .replace(/^,/, \"\")\r\n            .replace(/,,/gm, \",\");\r\n\r\n          return { customer };\r\n        });\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleButtonClicked(event) {\r\n    this.setState({ showView: true, customerView: { ...this.state.customer } });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <Navbar bg=\"dark\" variant=\"dark\" style={{ marginBottom: \"25px\" }}>\r\n            <Container>\r\n              <Navbar.Brand href=\"#create-form\">Form Create</Navbar.Brand>\r\n            </Container>\r\n          </Navbar>\r\n          <Row>\r\n            <Col>\r\n              <CreateForm\r\n                dataInput={this.state.customer}\r\n                elementsInForm={FakeData.elementsInForm}\r\n                handleInputChange={this.handleInputChange}\r\n                handleButtonClicked={this.handleButtonClicked}\r\n              />\r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n          <Navbar bg=\"dark\" variant=\"dark\" style={{ margin: \"25px 0\" }}>\r\n            <Container>\r\n              <Navbar.Brand href=\"#create-form\">Form View</Navbar.Brand>\r\n            </Container>\r\n          </Navbar>\r\n          <Row>\r\n            <Col>\r\n              {this.state.showView && (\r\n                <ViewForm\r\n                  dataInput={this.state.customerView}\r\n                  elementsInForm={FakeData.elementsInForm}\r\n                />\r\n              )}\r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}